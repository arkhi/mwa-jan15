body {
  width: 100%;
  padding: 0;
  margin: 0 auto;
  font-family: Verdana, sans-serif;
  color: #333;
  background-color: #fff;
  /* Avoid shift in layout if content gets collapsed. */
  overflow-y: scroll;
}

@media all and (min-width:35em){
  body {
    width: 80%;
    max-width: 38em;
  }
}

h1,
h2 {
  padding: .5rem;
  margin: 0;
}

h1 {
  font-family: zapfino, cursive;
  font-size: 1.5rem;
  text-align: center;
  color: #fff;
  background-color: #95005e;
}

@media all and (min-width:35em){
  h1 {
    border-radius: 0 0 3px 3px;
  }
}

/* entries */

.entry-header,
.entry-header h2 {
  padding: .5rem;
  margin: 0;
  font-size: 1rem;

  transition-property: color, background-color;
}

.open .entry-header {
  background-color: #e8cfe0;
}

.entry.open .actions {
  background: #fff;
}

.actions .action {
  display: inline-block;
  padding: 0.5rem 1rem;
  border: 1px dotted #5d006f;
  font-weight: bold;
  text-decoration: none;
  text-transform: uppercase;
  color: #5d006f;
  cursor: pointer;
}

.actions .action:focus,
.actions .action:hover {
  color: #fff;
  background-color: #5d006f;
}

/* collapsibles */

.can-collapse {
  transition-duration: .2s;
}

.can-collapse {
  overflow: hidden;
  transition-property: height;
}

.collapse-trigger:focus,
.collapse-trigger:hover {
  background-color: #ddd;
}

.collapse-trigger:active {
  background-color: #bbb;
}

/* Referencial for the arrow */
.can-collapse .collapse-trigger {
  position: relative;
  padding-right: 2em;
}

.can-collapse .collapse-trigger::after {
  position: absolute;
  right: .5rem;
  /* Simulate an arrow with borders as "\2bc8" is not well rendered on all devices. */
  border: solid transparent;
  /* .5rem Ã— 2 = font-size */
  border-width: .5rem 0 .5rem .5em;
  border-left-color: #333;
  content: '';
  /* More or less the centroid of the arrow */
  transform-origin: 25% center;
  transform: rotate(0);
  transition: transform .2s;
}

.open .collapse-trigger::after {
  transform: rotate(90deg);
}

.collapse-target {
  padding: 1rem;
  box-shadow: 0 0 4px #ccc inset;
  background-color: #efefef;
}

.can-click {
  cursor: pointer;
}

.searching-location {
  background-color: #f00;
}

/* form */

label {
  cursor: pointer;
}

.form-row {
  margin: .5rem;
}

.add-entry {
  border: solid #999;
  border-width: 1px 0;
  text-transform: uppercase;
  background-color: #f9baf5;
}

form .prop {
  display: inline-block;
  width: 20%;
  font-weight: bold;
  text-align: right;
}

form .value {
  width: 75%;
  vertical-align: inherit;
}

/* map */

#map.has-content {
  z-index: 0;
  height: 300px;
}

.entry-location {
  display: none;
}

/* debug */

#feedbacks {
  position: fixed;
  top: 0;
  right: 0;
  left: 3em;
  z-index: 1;
  padding-left: .5em;
  border-left: dotted 2px #999;
}

.feedback-entry {
  padding: .5em 1em;
  font-weight: bold;
  background-color: #dfefe1;
}

.feedback-entry + .feedback-entry {
  margin-top: .5em;
}

.feedback-error {
  background-color: #ffcfcf;
}

.feedback-info {
  background-color: #cfdeff;
}

.feedback-warning {
  background-color: #ffffcf;
}

.close-all {
  position: absolute;
  top: 0;
  right: 100%;
  padding: 0.5rem 0.75rem;
  margin-right: 2px;
  font-size: 2rem;
  font-weight: bold;
  color: #999;
  background-color: #fff;
}

.close-all:hover {
  color: #000;
}

/* debug */

.debug .can-collapse::before {
  position: absolute;
  left: 70%;
  content: attr(id);
}

#dev-actions {
  display: none;
}

.debug #dev-actions {
  display: block;
}

@media all and (min-width:35em){
  #dev-debug {
    position: fixed;
    top: 0;
    right: 80%;
    left: 0;
  }
}
